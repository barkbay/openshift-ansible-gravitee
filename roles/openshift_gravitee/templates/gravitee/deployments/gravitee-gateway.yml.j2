apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: gateway
  name: gateway
  namespace: {{ l_openshift_gravitee_namespace }}
spec:
  replicas: 1
  selector:
    deploymentconfig: gateway
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gateway
        deploymentconfig: gateway
    spec:
      containers:
        - image: {{ l_gravitee_gateway_image }}
          imagePullPolicy: Always
          name: gateway
          livenessProbe:
            tcpSocket:
              port: 8082
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 8082
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 24
          ports:
            - containerPort: 8082
              protocol: TCP
          volumeMounts:
          - mountPath: /opt/graviteeio-gateway/plugins/.work
            name: gravitee-work
          - mountPath: /opt/graviteeio-gateway/logs
            name: gateway-logs
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - name: gravitee-work
          emptyDir:
            medium: Memory
        - name: gateway-logs
          emptyDir: {}
      dnsPolicy: Default
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: gateway
      serviceAccountName: gateway
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
